using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using ProfitWell.Enum;
using ProfitWell.Helpers;
using System;

namespace ProfitWell.Models
{
    public class CreateSubscriptionRequestModel
    {
        /// <summary>
        /// The user ID. Do not include this field if you are creating a user's first subscription. 
        /// The UserId is automatically generated by ProfitWell for any new users. 
        /// Only include this field if you are referencing an existing user for whom you need to create an additional subscription. - Optional
        /// </summary>
        [JsonProperty("user_id", NullValueHandling = NullValueHandling.Ignore)]
        public string UserId { get; set; }

        /// <summary>
        /// If you wish, you can include your own identifier here so that you have a handle by which to 
        /// refer to this user in subsequent requests. An advantage of using your own identifier is 
        /// that you do not have to store the ProfitWell-generated UserIds in your database. If you 
        /// are creating a second subscription for a user, you will need to use either the UserId or 
        /// UserAlias fields when making this request so that we know which user you're referring to. - Optional
        /// </summary>
        [JsonProperty("user_alias", NullValueHandling = NullValueHandling.Ignore)]
        public string UserAlias { get; set; }

        [JsonProperty("subscription_alias", NullValueHandling = NullValueHandling.Ignore)]
        public string SubscriptionAlias { get; set; }

        [JsonProperty("email")]
        public string Email { get; set; }

        [JsonProperty("plan_id")]
        public string PlanId { get; set; }

        [JsonProperty("plan_interval")]
        [JsonConverter(typeof(StringEnumConverter))]
        public PlanInterval PlanInterval { get; set; }

        [JsonProperty("plan_currency", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(StringEnumConverter))]
        public CurrencySymbol PlanCurrency { get; set; }

        [JsonProperty("status")]
        [JsonConverter(typeof(StringEnumConverter))]
        public Status Status { get; set; }

        [JsonProperty("value")]
        [JsonConverter(typeof(PriceConverter))]
        public decimal Price { get; set; }

        [JsonProperty("effective_date")]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.UnixDateTimeConverter))]
        public DateTime EffectiveDate { get; set; }

        [JsonProperty("data_provider_user_id", NullValueHandling = NullValueHandling.Ignore)]
        public string DataProviderUserId { get; set; }
    }
}
